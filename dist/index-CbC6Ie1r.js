"use strict";const e=require("zod"),t=e.z.enum(["gpt-4","gpt-4-turbo","gpt-4-turbo-preview","gpt-3.5-turbo","gpt-3.5-turbo-16k"]),r=e.z.enum(["gemini-1.5-pro","gemini-1.5-flash","gemini-pro","gemini-pro-vision"]),s=e.z.enum(["openai","gemini","azure"]),a=e.z.union([t,r,s]),o=e.z.string().min(2).max(5),n=e.z.record(a,e.z.record(o,e.z.string())),i=e.z.object({exclude:e.z.array(e.z.string()).optional(),include:e.z.array(e.z.string()).optional()}),g=e.z.object({exclude:e.z.array(e.z.string()).optional(),include:e.z.array(e.z.string()).optional()}),u=e.z.object({deactivate:e.z.boolean().optional().default(!1),sourceLanguage:o.default("en"),targetLanguages:e.z.array(o),currentLocale:o.optional(),apiKey:e.z.string(),model:a.default("gpt-3.5-turbo"),modelConfig:n.optional(),debug:e.z.boolean().optional().default(!1),auto:e.z.boolean().optional().default(!0),autoConfig:i.optional(),fallback:e.z.boolean().optional().default(!0),fallbackConfig:g.optional(),localeBasePath:e.z.string().optional().default("/rustle/locales"),useVirtualDOM:e.z.boolean().optional().default(!0)}),p=e.z.object({fingerprint:e.z.string(),source:e.z.string(),file:e.z.string(),loc:e.z.object({start:e.z.number(),end:e.z.number()}),contentHash:e.z.string(),version:e.z.number(),translations:e.z.record(o,e.z.string()),lastTranslatedAt:e.z.string().optional(),tags:e.z.array(e.z.string()),status:e.z.enum(["translated","missing","updated"])}),l=e.z.object({version:e.z.string(),sourceLanguage:o,targetLanguages:e.z.array(o),entries:e.z.array(p),lastUpdated:e.z.string()}),c=e.z.record(e.z.string(),e.z.string()),d=e.z.object({entries:e.z.array(e.z.object({id:e.z.string(),text:e.z.string(),context:e.z.object({tags:e.z.array(e.z.string()),file:e.z.string()}).optional()})),sourceLanguage:o,targetLanguage:o,model:a.optional()}),x=e.z.object({translations:e.z.record(e.z.string(),e.z.string()),success:e.z.boolean(),error:e.z.string().optional()});exports.AIModelSchema=a,exports.AutoConfigSchema=i,exports.FallbackConfigSchema=g,exports.GeminiModelSchema=r,exports.LegacyModelSchema=s,exports.LocaleDataSchema=c,exports.LocaleSchema=o,exports.MasterMetadataSchema=l,exports.ModelConfigSchema=n,exports.OpenAIModelSchema=t,exports.RustleConfigSchema=u,exports.TranslationEntrySchema=p,exports.TranslationRequestSchema=d,exports.TranslationResponseSchema=x;
